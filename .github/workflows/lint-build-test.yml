name: Lint, Build, and Test

on:
  workflow_call:

jobs:
  prepare:
    name: Prepare
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    outputs:
      child-workspace-package-names: ${{ steps.workspace-package-names.outputs.child-workspace-package-names }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable
      - name: Fetch workspace package names
        id: workspace-package-names
        run: |
          echo "child-workspace-package-names=$(yarn child-workspace-package-names-as-json)" >> "$GITHUB_OUTPUT"
        shell: bash

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --immutable-cache
      - run: yarn lint
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  validate-changelog:
    name: Validate changelog
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version: [16.x]
        package-name: ${{ fromJson(needs.prepare.outputs.child-workspace-package-names) }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --immutable-cache
      - run: yarn workspace ${{ matrix.package-name }} lint:changelog
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: prepare
    strategy:
      matrix:
        node-version: [16.x]
        os: [macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --immutable-cache
      - run: yarn build
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version: [16.x]
        package-name: ${{ fromJson(needs.prepare.outputs.child-workspace-package-names) }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --immutable-cache
      - run: yarn build
      - run: yarn workspace ${{ matrix.package-name }} run test:ci
      - name: Get coverage folder
        id: get-coverage-folder
        run: |
          echo "Package Name: ${{ matrix.package-name }}"
          echo "stub" >> stub
          echo "coverage-folder=$(yarn workspaces list --json | grep "\"name\":\"${{ matrix.package-name }}\"" | jq -r '.location')/coverage" >> "$GITHUB_OUTPUT"
        shell: bash
      - name: Upload coverage artifact
        if: ${{ matrix.node-version == '16.x' }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            stub
            ${{ steps.get-coverage-folder.outputs.coverage-folder }}/**/coverage-final.json
          if-no-files-found: warn
          retention-days: 1
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  upload-coverage:
    name: Upload coverage to Codecov
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Download coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Upload coverage results
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/**/coverage-final.json
