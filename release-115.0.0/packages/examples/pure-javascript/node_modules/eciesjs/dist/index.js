"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.utils = exports.PublicKey = exports.PrivateKey = exports.decrypt = exports.encrypt = void 0;
var keys_1 = require("./keys");
var utils_1 = require("./utils");
var consts_1 = require("./consts");
function encrypt(receiverRawPK, msg) {
    var ephemeralKey = new keys_1.PrivateKey();
    var receiverPK = receiverRawPK instanceof Buffer
        ? new keys_1.PublicKey(receiverRawPK)
        : keys_1.PublicKey.fromHex(receiverRawPK);
    var aesKey = ephemeralKey.encapsulate(receiverPK);
    var encrypted = (0, utils_1.aesEncrypt)(aesKey, msg);
    return Buffer.concat([ephemeralKey.publicKey.uncompressed, encrypted]);
}
exports.encrypt = encrypt;
function decrypt(receiverRawSK, msg) {
    var receiverSK = receiverRawSK instanceof Buffer
        ? new keys_1.PrivateKey(receiverRawSK)
        : keys_1.PrivateKey.fromHex(receiverRawSK);
    var senderPubkey = new keys_1.PublicKey(msg.slice(0, consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE));
    var encrypted = msg.slice(consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE);
    var aesKey = senderPubkey.decapsulate(receiverSK);
    return (0, utils_1.aesDecrypt)(aesKey, encrypted);
}
exports.decrypt = decrypt;
var keys_2 = require("./keys");
Object.defineProperty(exports, "PrivateKey", { enumerable: true, get: function () { return keys_2.PrivateKey; } });
Object.defineProperty(exports, "PublicKey", { enumerable: true, get: function () { return keys_2.PublicKey; } });
exports.utils = {
    aesDecrypt: utils_1.aesDecrypt,
    aesEncrypt: utils_1.aesEncrypt,
    decodeHex: utils_1.decodeHex,
    getValidSecret: utils_1.getValidSecret,
    remove0x: utils_1.remove0x,
};
