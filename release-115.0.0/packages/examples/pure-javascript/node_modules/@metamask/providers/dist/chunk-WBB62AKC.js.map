{"version":3,"sources":["../src/EIP6963.ts"],"names":[],"mappings":";AAAA,SAAS,gBAAgB;AAuEzB,IAAM,gBACJ;AAGF,IAAM,aACJ;AASK,SAAS,gBACd,gBACM;AACN,SAAO;AAAA,IACL;AAAA,IACA,CAAC,UAAwC;AACvC,UAAI,CAAC,6BAA6B,KAAK,GAAG;AACxC;AAAA,UACE,+DAA+D,yCAA0B;AAAA,QAC3F;AAAA,MACF;AACA,qBAAe,MAAM,MAAM;AAAA,IAC7B;AAAA,EACF;AAEA,SAAO,cAAc,IAAI,MAAM,uCAAyB,CAAC;AAC3D;AAYO,SAAS,iBAAiB,gBAA6C;AAC5E,MAAI,CAAC,sBAAsB,cAAc,GAAG;AAC1C,sBAAkB,yCAAyC;AAAA,EAC7D;AACA,QAAM,EAAE,MAAM,SAAS,IAAI;AAE3B,QAAM,oBAAoB,MACxB,OAAO;AAAA,IACL,IAAI,YAAY,2CAA4B;AAAA,MAC1C,QAAQ,OAAO,OAAO,EAAE,MAAM,EAAE,GAAG,KAAK,GAAG,SAAS,CAAC;AAAA,IACvD,CAAC;AAAA,EACH;AAEF,oBAAkB;AAClB,SAAO;AAAA,IACL;AAAA,IACA,CAAC,UAAuC;AACtC,UAAI,CAAC,4BAA4B,KAAK,GAAG;AACvC;AAAA,UACE,8DAA8D,uCAAyB;AAAA,QACzF;AAAA,MACF;AACA,wBAAkB;AAAA,IACpB;AAAA,EACF;AACF;AAQA,SAAS,4BACP,OACsC;AACtC,SAAO,iBAAiB,SAAS,MAAM,SAAS;AAClD;AAQA,SAAS,6BACP,OACuC;AACvC,SACE,iBAAiB,eACjB,MAAM,SAAS,6CACf,OAAO,SAAS,MAAM,MAAM,KAC5B,sBAAsB,MAAM,MAAM;AAEtC;AAQA,SAAS,sBACP,gBACyC;AACzC,MACE,CAAC,SAAS,cAAc,KACxB,CAAC,SAAS,eAAe,IAAI,KAC7B,CAAC,SAAS,eAAe,QAAQ,GACjC;AACA,WAAO;AAAA,EACT;AACA,QAAM,EAAE,KAAK,IAAI;AAEjB,SACE,OAAO,KAAK,SAAS,YACrB,cAAc,KAAK,KAAK,IAAI,KAC5B,OAAO,KAAK,SAAS,YACrB,QAAQ,KAAK,IAAI,KACjB,OAAO,KAAK,SAAS,YACrB,KAAK,KAAK,WAAW,YAAY,KACjC,OAAO,KAAK,SAAS,YACrB,WAAW,KAAK,KAAK,IAAI;AAE7B;AAQA,SAAS,kBAAkB,SAAiB;AAC1C,QAAM,IAAI;AAAA,IACR,GAAG,OAAO;AAAA,EACZ;AACF","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProvider } from './BaseProvider';\n\n/**\n * Describes the possible EIP-6963 event names\n */\nenum EIP6963EventNames {\n  Announce = 'eip6963:announceProvider',\n  Request = 'eip6963:requestProvider', // eslint-disable-line @typescript-eslint/no-shadow\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [EIP6963EventNames.Request]: EIP6963RequestProviderEvent;\n    [EIP6963EventNames.Announce]: EIP6963AnnounceProviderEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n *\n * @type EIP6963ProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type EIP6963ProviderInfo = {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n};\n\n/**\n * Represents a provider and the information relevant for the dapp.\n *\n * @type EIP6963ProviderDetail\n * @property info - The EIP6963ProviderInfo object.\n * @property provider - The provider instance.\n */\nexport type EIP6963ProviderDetail = {\n  info: EIP6963ProviderInfo;\n  provider: BaseProvider;\n};\n\n/**\n * Event for requesting an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n */\nexport type EIP6963RequestProviderEvent = Event & {\n  type: EIP6963EventNames.Request;\n};\n\n/**\n * Event for announcing an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n * @property detail - The detail object of the event.\n */\nexport type EIP6963AnnounceProviderEvent = CustomEvent & {\n  type: EIP6963EventNames.Announce;\n  detail: EIP6963ProviderDetail;\n};\n\n// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5\nconst UUID_V4_REGEX =\n  /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;\n\n// https://stackoverflow.com/a/20204811\nconst FQDN_REGEX =\n  /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/u;\n\n/**\n * Intended to be used by a dapp. Forwards every announced provider to the\n * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},\n * and dispatches an {@link EIP6963RequestProviderEvent}.\n *\n * @param handleProvider - A function that handles an announced provider.\n */\nexport function requestProvider<HandlerReturnType>(\n  handleProvider: (providerDetail: EIP6963ProviderDetail) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    EIP6963EventNames.Announce,\n    (event: EIP6963AnnounceProviderEvent) => {\n      if (!isValidAnnounceProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 AnnounceProviderEvent object received from ${EIP6963EventNames.Announce} event.`,\n        );\n      }\n      handleProvider(event.detail);\n    },\n  );\n\n  window.dispatchEvent(new Event(EIP6963EventNames.Request));\n}\n\n/**\n * Intended to be used by a wallet. Announces a provider by dispatching\n * an {@link EIP6963AnnounceProviderEvent}, and listening for\n * {@link EIP6963RequestProviderEvent} to re-announce.\n *\n * @throws If the {@link EIP6963ProviderDetail} is invalid.\n * @param providerDetail - The {@link EIP6963ProviderDetail} to announce.\n * @param providerDetail.info - The {@link EIP6963ProviderInfo} to announce.\n * @param providerDetail.provider - The provider to announce.\n */\nexport function announceProvider(providerDetail: EIP6963ProviderDetail): void {\n  if (!isValidProviderDetail(providerDetail)) {\n    throwErrorEIP6963('Invalid EIP-6963 ProviderDetail object.');\n  }\n  const { info, provider } = providerDetail;\n\n  const _announceProvider = () =>\n    window.dispatchEvent(\n      new CustomEvent(EIP6963EventNames.Announce, {\n        detail: Object.freeze({ info: { ...info }, provider }),\n      }),\n    );\n\n  _announceProvider();\n  window.addEventListener(\n    EIP6963EventNames.Request,\n    (event: EIP6963RequestProviderEvent) => {\n      if (!isValidRequestProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 RequestProviderEvent object received from ${EIP6963EventNames.Request} event.`,\n        );\n      }\n      _announceProvider();\n    },\n  );\n}\n\n/**\n * Validates an {@link EIP6963RequestProviderEvent} object.\n *\n * @param event - The {@link EIP6963RequestProviderEvent} to validate.\n * @returns Whether the {@link EIP6963RequestProviderEvent} is valid.\n */\nfunction isValidRequestProviderEvent(\n  event: unknown,\n): event is EIP6963RequestProviderEvent {\n  return event instanceof Event && event.type === EIP6963EventNames.Request;\n}\n\n/**\n * Validates an {@link EIP6963AnnounceProviderEvent} object.\n *\n * @param event - The {@link EIP6963AnnounceProviderEvent} to validate.\n * @returns Whether the {@link EIP6963AnnounceProviderEvent} is valid.\n */\nfunction isValidAnnounceProviderEvent(\n  event: unknown,\n): event is EIP6963AnnounceProviderEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === EIP6963EventNames.Announce &&\n    Object.isFrozen(event.detail) &&\n    isValidProviderDetail(event.detail)\n  );\n}\n\n/**\n * Validates an {@link EIP6963ProviderDetail} object.\n *\n * @param providerDetail - The {@link EIP6963ProviderDetail} to validate.\n * @returns Whether the {@link EIP6963ProviderDetail} is valid.\n */\nfunction isValidProviderDetail(\n  providerDetail: unknown,\n): providerDetail is EIP6963ProviderDetail {\n  if (\n    !isObject(providerDetail) ||\n    !isObject(providerDetail.info) ||\n    !isObject(providerDetail.provider)\n  ) {\n    return false;\n  }\n  const { info } = providerDetail;\n\n  return (\n    typeof info.uuid === 'string' &&\n    UUID_V4_REGEX.test(info.uuid) &&\n    typeof info.name === 'string' &&\n    Boolean(info.name) &&\n    typeof info.icon === 'string' &&\n    info.icon.startsWith('data:image') &&\n    typeof info.rdns === 'string' &&\n    FQDN_REGEX.test(info.rdns)\n  );\n}\n\n/**\n * Throws an error with link to EIP-6963 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to EIP-6963.\n */\nfunction throwErrorEIP6963(message: string) {\n  throw new Error(\n    `${message} See https://eips.ethereum.org/EIPS/eip-6963 for requirements.`,\n  );\n}\n"]}