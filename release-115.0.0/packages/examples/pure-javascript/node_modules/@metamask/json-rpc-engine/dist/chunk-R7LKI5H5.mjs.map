{"version":3,"sources":["../src/idRemapMiddleware.ts"],"sourcesContent":["import type { Json, JsonRpcParams } from '@metamask/utils';\n\nimport { getUniqueId } from './getUniqueId';\nimport type { JsonRpcMiddleware } from './JsonRpcEngine';\n\n/**\n * Returns a middleware function that overwrites the `id` property of each\n * request with an ID that is guaranteed to be unique, and restores the original\n * ID in a return handler.\n *\n * If used, should be the first middleware in the stack.\n *\n * @returns The ID remap middleware function.\n */\nexport function createIdRemapMiddleware(): JsonRpcMiddleware<\n  JsonRpcParams,\n  Json\n> {\n  return (request, response, next, _end) => {\n    const originalId = request.id;\n    const newId = getUniqueId();\n    request.id = newId;\n    response.id = newId;\n    next((done) => {\n      request.id = originalId;\n      response.id = originalId;\n      done();\n    });\n  };\n}\n"],"mappings":";;;;;AAcO,SAAS,0BAGd;AACA,SAAO,CAAC,SAAS,UAAU,MAAM,SAAS;AACxC,UAAM,aAAa,QAAQ;AAC3B,UAAM,QAAQ,YAAY;AAC1B,YAAQ,KAAK;AACb,aAAS,KAAK;AACd,SAAK,CAAC,SAAS;AACb,cAAQ,KAAK;AACb,eAAS,KAAK;AACd,WAAK;AAAA,IACP,CAAC;AAAA,EACH;AACF;","names":[]}