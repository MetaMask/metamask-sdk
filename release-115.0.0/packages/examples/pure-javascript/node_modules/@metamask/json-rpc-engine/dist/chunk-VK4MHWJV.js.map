{"version":3,"sources":["../src/mergeMiddleware.ts"],"names":[],"mappings":";;;;;AAWO,SAAS,gBACd,iBACA;AACA,QAAM,SAAS,IAAI,cAAc;AACjC,kBAAgB,QAAQ,CAAC,eAAe,OAAO,KAAK,UAAU,CAAC;AAC/D,SAAO,OAAO,aAAa;AAC7B","sourcesContent":["import type { Json, JsonRpcParams } from '@metamask/utils';\n\nimport type { JsonRpcMiddleware } from './JsonRpcEngine';\nimport { JsonRpcEngine } from './JsonRpcEngine';\n\n/**\n * Takes a stack of middleware and joins them into a single middleware function.\n *\n * @param middlewareStack - The middleware stack to merge.\n * @returns The merged middleware function.\n */\nexport function mergeMiddleware(\n  middlewareStack: JsonRpcMiddleware<JsonRpcParams, Json>[],\n) {\n  const engine = new JsonRpcEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n"]}