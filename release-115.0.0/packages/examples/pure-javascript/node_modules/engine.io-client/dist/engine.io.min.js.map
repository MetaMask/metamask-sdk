{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/contrib/parseqs.js","../build/esm/contrib/yeast.js","../build/esm/transport.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","length","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","qs","qry","pairs","l","pair","decodeURIComponent","prev","TransportError","reason","description","context","Error","Transport","writable","query","socket","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","xd","forceBase64","_this","withCredentials","cookieJar","createCookieJar","poll","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","timestampRequests","timestampParam","sid","b64","createUri","Request","uri","req","request","method","xhrStatus","_this6","onError","onData","_this7","pollXhr","undefined","_a","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","_this9","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades"],"mappings":"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"}