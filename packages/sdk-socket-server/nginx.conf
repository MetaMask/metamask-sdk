events {}

http {
    upstream app_servers {
        least_conn;                 # Load balancing method (least connections)
        server app1:4000 max_fails=3 fail_timeout=30s;
        server app2:4000 max_fails=3 fail_timeout=30s;
        server app3:4000 max_fails=3 fail_timeout=30s;

        # enable sticky session with either "hash" (uses the complete IP address)
        hash $remote_addr consistent;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://app_servers;  # Forward requests to the upstream servers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # See https://socket.io/docs/v4/reverse-proxy/
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
