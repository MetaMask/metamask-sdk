(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[594],{"./src/hooks/use-app-preferences-setup.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.useAppPreferencesSetup=void 0;var _defineProperty2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/defineProperty.js")),_slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),_react=__webpack_require__("../devreact/node_modules/react/index.js"),useAppPreferencesSetup=exports.useAppPreferencesSetup=function useAppPreferencesSetup(_ref){var theme=_ref.theme,i18nInstance=_ref.i18nInstance,savePreferences=_ref.savePreferences,setDarkMode=_ref.setDarkMode,_useState=(0,_react.useState)(!1),_useState2=(0,_slicedToArray2.default)(_useState,2),collapsed=_useState2[0],setCollapsed=_useState2[1],_useState3=(0,_react.useState)(!1),_useState4=(0,_slicedToArray2.default)(_useState3,2),customFontLoaded=_useState4[0],setCustomFont=_useState4[1],_useState5=(0,_react.useState)(!0),_useState6=(0,_slicedToArray2.default)(_useState5,2),rippleEffectEnabled=_useState6[0],setRippleEffectEnabled=_useState6[1],_useState7=(0,_react.useState)(theme),_useState8=(0,_slicedToArray2.default)(_useState7,2),dynamicTheme=_useState8[0],setDynamicTheme=_useState8[1],logger=console,_useState9=(0,_react.useState)(!1),_useState10=(0,_slicedToArray2.default)(_useState9,2),listener=_useState10[0],setListener=_useState10[1];return(0,_react.useEffect)((function(){setDynamicTheme(theme)}),[theme,dynamicTheme]),(0,_react.useEffect)((function(){return!listener&&i18nInstance.isInitialized&&(logger.debug("setting up i18n listener"),i18nInstance.on("languageChanged",(function onLanguage(lng){logger.debug(`language changed to ${lng}`),null==savePreferences||savePreferences({darkMode:!1,rippleEffectEnabled,locale:lng})})),setListener(!0)),function(){}}),[i18nInstance,savePreferences,listener,logger,dynamicTheme,rippleEffectEnabled]),(0,_react.useMemo)((function(){return{toggleDarkMode:function toggleDarkMode(){setDarkMode(false),null==savePreferences||savePreferences({darkMode:false,rippleEffectEnabled,locale:i18nInstance.language})},toggleCollapsed:function toggleCollapsed(){return setCollapsed(!collapsed)},toggleCustomFont:function toggleCustomFont(){return setCustomFont(!customFontLoaded)},toggleRippleEffect:function toggleRippleEffect(){setRippleEffectEnabled((function(oldValue){return null==savePreferences||savePreferences({darkMode:!1,rippleEffectEnabled:!oldValue,locale:i18nInstance.language}),!oldValue}))},setThemeColor:function setThemeColor(_ref2){var name=_ref2.name,value=_ref2.value;setDynamicTheme((function(oldTheme){return Object.assign({},oldTheme,{colors:Object.assign({},oldTheme.colors,(0,_defineProperty2.default)({},name,value))})}))},toggleThemeVersion:function toggleThemeVersion(){},customFontLoaded,rippleEffectEnabled,collapsed,darkMode:!1,theme:dynamicTheme}}),[dynamicTheme,collapsed,i18nInstance,savePreferences,customFontLoaded,rippleEffectEnabled,setDarkMode])};try{useAppPreferencesSetup.displayName="useAppPreferencesSetup",useAppPreferencesSetup.__docgenInfo={description:"",displayName:"useAppPreferencesSetup",props:{theme:{defaultValue:null,description:"",name:"theme",required:!0,type:{name:"Theme"}},i18nInstance:{defaultValue:null,description:"",name:"i18nInstance",required:!0,type:{name:"i18n"}},savedPreferences:{defaultValue:null,description:"",name:"savedPreferences",required:!1,type:{name:"SavedUserPreferences"}},savePreferences:{defaultValue:null,description:"",name:"savePreferences",required:!1,type:{name:"((userPrefs: SavedUserPreferences) => void)"}},setDarkMode:{defaultValue:null,description:"",name:"setDarkMode",required:!0,type:{name:"(value: boolean | ((oldValue: boolean) => boolean)) => void"}},setThemeVersion:{defaultValue:null,description:"",name:"setThemeVersion",required:!0,type:{name:"(number: number) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/use-app-preferences-setup.tsx#useAppPreferencesSetup"]={docgenInfo:useAppPreferencesSetup.__docgenInfo,name:"useAppPreferencesSetup",path:"src/hooks/use-app-preferences-setup.tsx#useAppPreferencesSetup"})}catch(__react_docgen_typescript_loader_error){}}}]);