(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[1219],{"./src/design-system/components/Cards/Card/Card.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Card=void 0;_interopRequireDefault(__webpack_require__("../devreact/node_modules/react/index.js"));var _Card$parameters,_Card$parameters2,_Card$parameters2$doc,_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_Text=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/design-system/components/Texts/Text/index.ts")),_Card=_interopRequireDefault(__webpack_require__("./src/design-system/components/Cards/Card/Card.tsx")),_theme=__webpack_require__("./src/theme/index.ts"),_jsxRuntime=__webpack_require__("../devreact/node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}exports.default={title:"Component Library / Cards",component:_Card.default};var Card=exports.Card=function Template(){return(0,_jsxRuntime.jsx)(_Card.default,{children:(0,_jsxRuntime.jsx)(_View.default,{style:{height:50,backgroundColor:_theme.mockTheme.colors.background.alternative,alignItems:"center",justifyContent:"center"},children:(0,_jsxRuntime.jsx)(_Text.default,{variant:_Text.TextVariant.BodySM,children:"Wrapped Content"})})})}.bind({});Card.parameters=Object.assign({},Card.parameters,{docs:Object.assign({},null==(_Card$parameters=Card.parameters)?void 0:_Card$parameters.docs,{source:Object.assign({originalSource:"() => <CardComponent>\n    <View\n  // eslint-disable-next-line react-native/no-inline-styles\n  style={{\n    height: 50,\n    backgroundColor: mockTheme.colors.background.alternative,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }}>\n      <Text variant={TextVariant.BodySM}>{'Wrapped Content'}</Text>\n    </View>\n  </CardComponent>"},null==(_Card$parameters2=Card.parameters)||null==(_Card$parameters2$doc=_Card$parameters2.docs)?void 0:_Card$parameters2$doc.source)})})}}]);