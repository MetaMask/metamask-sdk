(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[2233,2964],{"./src/components/rpc-history-viewer/rpc-history-viewer.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithHistoryData=void 0;var _WithHistoryData$para,_WithHistoryData$para2,_WithHistoryData$para3,_storybook=__webpack_require__("./src/mocks/storybook.mocks.tsx"),RPCHistoryViewerMeta={title:"SDK UI / RPCHistoryViewer",component:__webpack_require__("./src/components/rpc-history-viewer/rpc-history-viewer.tsx").RPCHistoryViewer,argTypes:Object.assign({},_storybook.sdkProviderArgTypes),decorators:[_storybook.SdkContextDecorator],parameters:{}},mockRpcHistory=(exports.default=RPCHistoryViewerMeta,{1:{id:"1",method:"eth_blockNumber",timestamp:Date.now()-1e4,result:"0x5BAD55",error:void 0,elapsedTime:27},2:{id:"2",method:"eth_getBalance",timestamp:Date.now()-5e3,result:"0x1C8E8C6CG",error:void 0,elapsedTime:34},3:{id:"3",method:"eth_sendTransaction",timestamp:Date.now(),result:void 0,error:{message:"User denied transaction signature."},elapsedTime:45}}),WithHistoryData=exports.WithHistoryData={args:{startVisible:!0,rpcHistory:mockRpcHistory}};WithHistoryData.parameters=Object.assign({},WithHistoryData.parameters,{docs:Object.assign({},null==(_WithHistoryData$para=WithHistoryData.parameters)?void 0:_WithHistoryData$para.docs,{source:Object.assign({originalSource:"{\n  args: {\n    startVisible: true,\n    rpcHistory: mockRpcHistory\n  }\n}"},null==(_WithHistoryData$para2=WithHistoryData.parameters)||null==(_WithHistoryData$para3=_WithHistoryData$para2.docs)?void 0:_WithHistoryData$para3.source)})});try{Meta.displayName="Meta",Meta.__docgenInfo={description:"Metadata to configure the stories for a component.",displayName:"Meta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/rpc-history-viewer/rpc-history-viewer.stories.tsx#Meta"]={docgenInfo:Meta.__docgenInfo,name:"Meta",path:"src/components/rpc-history-viewer/rpc-history-viewer.stories.tsx#Meta"})}catch(__react_docgen_typescript_loader_error){}},"./src/mocks/storybook.mocks.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.sdkProviderArgTypes=exports.defaultSDKtArgs=exports.SdkContextDecorator=void 0;var _sdkReact=__webpack_require__("../sdk-react/dist/esm/index.js"),_networks=(_interopRequireDefault(__webpack_require__("../devreact/node_modules/react/index.js")),_interopRequireDefault(__webpack_require__("./src/utils/networks.ts"))),_sdkCommunicationLayer=__webpack_require__("../sdk-communication-layer/dist/browser/es/metamask-sdk-communication-layer.js"),_jsxRuntime=__webpack_require__("../devreact/node_modules/react/jsx-runtime.js"),defaultSDKtArgs=exports.defaultSDKtArgs={sdk:{getProvider:function getProvider(){return{}}},connected:!0,connecting:!1,extensionActive:!1,chainId:"0x1",balance:"11111111111111111",account:"0xAAAAA0e296961f476E01184274Ce85ae60184CB0"},chainIdOptions=Object.keys(_networks.default).reduce((function(options,key){var network=_networks.default[key];return console.log(`key: ${key}`,network),options[network.name]=network.hexChainId,options}),{});exports.sdkProviderArgTypes={connected:{control:"boolean"},connecting:{control:"boolean"},account:{control:"text",defaultValue:defaultSDKtArgs.account},balance:{control:"text",defaultValue:defaultSDKtArgs.balance},chainId:{control:"select",options:chainIdOptions,defaultValue:defaultSDKtArgs.chainId},keyExchangeStep:{control:"select",options:_sdkCommunicationLayer.KeyExchangeMessageType,defaultValue:_sdkCommunicationLayer.KeyExchangeMessageType.KEY_HANDSHAKE_ACK},rpcHistory:{control:"object",defaultValue:{}},extensionActive:{control:"boolean"}},exports.SdkContextDecorator=function SdkContextDecorator(ThisStory,sc){var _sc$args=sc.args,ready=_sc$args.ready,account=_sc$args.account,connected=_sc$args.connected,connecting=_sc$args.connecting,chainId=_sc$args.chainId,balance=_sc$args.balance,readOnlyCalls=_sc$args.readOnlyCalls,extensionActive=_sc$args.extensionActive,rpcHistory=_sc$args.rpcHistory,status={keyInfo:{keysExchanged:!0,ecies:{private:"aaa",public:"bbb",otherPubKey:"ccc"},step:_sc$args.keyExchangeStep}};return console.log("sc.args",sc.args),(0,_jsxRuntime.jsx)(_sdkReact.SDKContext.Provider,{value:{ready,extensionActive,balance,connected,readOnlyCalls,connecting,account,chainId,rpcHistory,status},children:(0,_jsxRuntime.jsx)(ThisStory,{})})}}}]);