(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[6406],{"./src/design-system/components/Form/TextField/TextField.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.TextField=void 0;_interopRequireDefault(__webpack_require__("../devreact/node_modules/react/index.js"));var _TextField$parameters,_TextField$parameters2,_TextField$parameters3,_TextField=_interopRequireDefault(__webpack_require__("./src/design-system/components/Form/TextField/TextField.tsx")),_TextField2=__webpack_require__("./src/design-system/components/Form/TextField/TextField.constants.tsx"),_TextField3=__webpack_require__("./src/design-system/components/Form/TextField/TextField.types.ts"),_jsxRuntime=__webpack_require__("../devreact/node_modules/react/jsx-runtime.js"),TextField=(exports.default={title:"Component Library / Form / TextField",component:_TextField.default,argTypes:{size:{options:Object.values(_TextField3.TextFieldSize),control:{type:"select"},defaultValue:_TextField2.SAMPLE_TEXTFIELD_PROPS.size},isError:{control:{type:"boolean"},defaultValue:_TextField2.SAMPLE_TEXTFIELD_PROPS.isError},isDisabled:{control:{type:"boolean"},defaultValue:_TextField2.SAMPLE_TEXTFIELD_PROPS.isDisabled},isReadonly:{control:{type:"boolean"},defaultValue:_TextField2.SAMPLE_TEXTFIELD_PROPS.isReadonly},placeholder:{control:{type:"text"},defaultValue:_TextField2.SAMPLE_TEXTFIELD_PROPS.placeholder}}},exports.TextField=function Template(args){return(0,_jsxRuntime.jsx)(_TextField.default,Object.assign({},args,{startAccessory:_TextField2.SAMPLE_TEXTFIELD_PROPS.startAccessory,endAccessory:_TextField2.SAMPLE_TEXTFIELD_PROPS.endAccessory}))}.bind({}));TextField.args=Object.assign({},_TextField2.SAMPLE_TEXTFIELD_PROPS),TextField.parameters=Object.assign({},TextField.parameters,{docs:Object.assign({},null==(_TextField$parameters=TextField.parameters)?void 0:_TextField$parameters.docs,{source:Object.assign({originalSource:"args => <TextFieldComponent {...args} startAccessory={SAMPLE_TEXTFIELD_PROPS.startAccessory} endAccessory={SAMPLE_TEXTFIELD_PROPS.endAccessory} />"},null==(_TextField$parameters2=TextField.parameters)||null==(_TextField$parameters3=_TextField$parameters2.docs)?void 0:_TextField$parameters3.source)})})}}]);