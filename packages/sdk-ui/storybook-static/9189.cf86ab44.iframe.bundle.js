"use strict";(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[9189],{"./src/design-system/components/Toast/README.md":module=>{module.exports="# Toast\n\nToast is a component that slides up from the bottom. It is typically used to show post confirmation information.\n\n## Methods\n\n### `showToast()`\n\n```javascript\nshowToast(toastOptions: ToastOptions)\n```\n\n| <span style=\"color:gray;font-size:14px\">PARAMETERS</span> | <span style=\"color:gray;font-size:14px\">TYPE</span> | <span style=\"color:gray;font-size:14px\">DESCRIPTION</span> |\n| :-------------------------------------------------------- | :-------------------------------------------------- | :--------------------------------------------------------- |\n| toastOptions                                              | [ToastOptions](./Toast.types.ts#L36)                | Toast options to show.                                     |\n\n## Use Case\n\nUsing this component requires a three step process:\n\n1. Wrap a root element with `ToastContextWrapper`.\n\n```javascript\n// Replace import with relative path.\nimport { ToastContextWrapper } from 'app/component-library/components/Toast';\n\nconst App = () => (\n  <ToastContextWrapper>\n    <SampleRootComponent />\n  </ToastContextWrapper>\n);\n```\n\n2. Implement `Toast` component within a child of the root element and apply `toastRef` from `ToastContext`.\n\n```javascript\n// Replace import with relative path.\nimport Toast, { ToastContext } from 'app/component-library/components/Toast';\n\nconst SampleRootComponent = () => {\n  const { toastRef } = useContext(ToastContext);\n\n  return (\n    <>\n      <SampleContent />\n      <Toast ref={toastRef} />\n    </>\n  );\n};\n```\n\n3. Reference `toastRef` and call `toastRef.current?.showToast(...)` to show toast.\n\n```javascript\n// Replace import with relative path.\nimport {\n  ToastContext,\n  ToastVariants,\n} from 'app/component-library/components/Toast';\n\nconst { toastRef } = useContext(ToastContext);\n\nconst showToast = () => {\n  // Example of showing toast with Account variant.\n  toastRef.current?.showToast({\n    variant: ToastVariants.Account,\n    labelOptions: [\n      { label: LABEL_CHUNK_1 },\n      { label: LABEL_CHUNK_2, isBold: true },\n    ],\n    accountAddress: ACCOUNT_ADDRESS,\n    accountAvatarType: ACCOUNT_AVATAR_TYPE,\n    linkButtonOptions: {\n      label: LINK_LABEL,\n      onPress: ONPRESS_HANDLER,\n    },\n  });\n};\n```\n"}}]);