"use strict";(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[736],{"./src/design-system/components/Pickers/PickerNetwork/README.md":module=>{module.exports='# PickerNetwork\n\nPickerNetwork is a component that renders an avatar based on the user selected network.\n\n## Props\n\nThis component extends `TouchableOpacityProps` from React Native\'s [TouchableOpacity](https://reactnative.dev/docs/touchableopacity) component.\n\n### `imageSource`\n\nOptional network image from either a local or remote source.\n\n| <span style="color:gray;font-size:14px">TYPE</span>                   | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------------------------- | :------------------------------------------------------ |\n| [ImageSourcePropType](https://reactnative.dev/docs/image#imagesource) | Yes                                                     |\n\n### `label`\n\nNetwork label to display.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| string                                              | Yes                                                     |\n\n### `onPress`\n\nCallback to trigger when picker is pressed.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| function                                            | Yes                                                     |\n\n```javascript\n// Replace import with relative path.\nimport PickerNetwork from \'app/component-library/components/Pickers/PickerNetwork\';\n\n<PickerNetwork\n  onPress={ONPRESS_CALLBACK}\n  label={NETWORK_LABEL}\n  image={{ uri: NETWORK_IMAGE_URL }}\n/>;\n```\n'}}]);