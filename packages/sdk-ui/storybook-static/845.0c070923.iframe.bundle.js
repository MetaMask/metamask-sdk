"use strict";(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[845],{"./src/design-system/components/Buttons/Button/foundation/ButtonBase/README.md":module=>{module.exports='# ButtonBase\n\nButtonBase is a base component that we use for constructing context specific buttons.\n\n## Props\n\nThis component extends `TouchableOpacityProps` from React Native\'s [TouchableOpacity](https://reactnative.dev/docs/touchableopacity) component.\n\n### `label`\n\nButtonBase text.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| string or Node                                              | Yes                                                     |\n\n### `labelColor`\n\nOptional prop for the color of label. Applies to icon too.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| string                                              | No                                                      |\n\n### `size`\n\nOptional prop for the size of the button.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> | <span style="color:gray;font-size:14px">DEFAULT</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ | :----------------------------------------------------- |\n| [ButtonSize](../../Button.types.ts)          | Yes                                                     | Md                                                     |\n\n### `onPress`\n\nFunction to trigger when pressing the button.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| Function                                            | Yes                                                     |\n\n### `startIconName`\n\nOptional prop for the icon name of the icon that will be displayed before the label.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [IconName](../Icons/Icon.types.ts)                | No                                                   |\n\n### `endIconName`\n\nOptional prop for the icon name of the icon that will be displayed after the label.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [IconName](../Icons/Icon.types.ts)                | No                                                   |\n\n### `isDanger`\n\nOptional boolean to show the danger state of the button.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> | <span style="color:gray;font-size:14px">DEFAULT</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ | :----------------------------------------------------- |\n| boolean                                             | No                                                      | false                                                   |\n\n### `width`\n\nOptional param to control the width of the button.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> | <span style="color:gray;font-size:14px">DEFAULT</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ | :----------------------------------------------------- |\n| [ButtonWidthTypes](../../Button.types.ts) or number                  | No                                                      |      ButtonWidthTypes.Auto                                                   |\n\n### `isDisabled`\n\nOptional boolean to disable the button.\n\nDisabled button do not trigger the onPress handler and have reduced (50%) opacity.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> | <span style="color:gray;font-size:14px">DEFAULT</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ | :----------------------------------------------------- |\n| boolean                                             | No                                                      | false                                                   |\n\n## Usage\n\n```javascript\n<ButtonBase\n  label={SAMPLE_LABEL}\n  labelColor={SAMPLE_LABEL_COLOR}\n  startIconName={IconName.Bank}\n  endIconName={IconName.Bank}\n  size={ButtonSize.Md}\n  onPress={SAMPLE_ONPRESS_HANDLER}\n  isDanger\n  width={ButtonWidthTypes.Auto}\n  isDisabled\n/>;\n```\n'}}]);