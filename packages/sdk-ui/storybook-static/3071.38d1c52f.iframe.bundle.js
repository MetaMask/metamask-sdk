"use strict";(self.webpackChunk_metamask_sdk_ui=self.webpackChunk_metamask_sdk_ui||[]).push([[3071],{"./src/design-system/components/Avatars/Avatar/README.md":module=>{module.exports='# Avatar\n\nThe Avatar is a round graphic identity. It unifies [AvatarAccount](./variants/AvatarAccount/AvatarAccount.tsx), [AvatarFavicon](./variants/AvatarFavicon/AvatarFavicon.tsx), [AvatarIcon](./variants/AvatarIcon/AvatarIcon.tsx), [AvatarNetwork](./variants/AvatarNetwork/AvatarNetwork.tsx) and [AvatarToken](./variants/AvatarToken/AvatarToken.tsx).\n\n## Common Props\n\n### `variant`\n\nVariant of Avatar.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [AvatarVariant](./Avatar.types.ts)                                              | No                                                     |\n\n### `size`\n\nOptional enum to select between size variants.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> | <span style="color:gray;font-size:14px">DEFAULT</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ | :----------------------------------------------------- |\n| [AvatarSize](./Avatar.types.ts)          | Yes                                                     | Md                                                     |\n\n## AvatarAccount Props\n\n### `type`\n\nOptional enum to select the avatar type between `JazzIcon` and `Blockies`.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> | <span style="color:gray;font-size:14px">DEFAULT</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ | :----------------------------------------------------- |\n| [AvatarAccountType](./variants/AvatarAccount.types.ts)    | Yes                                                     | JazzIcon                                               |\n\n### `accountAddress`\n\nAn Ethereum wallet address.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| string                                              | Yes                                                     |\n\n## AvatarFavicon Props\n\n### `imageSource`\n\nA favicon image from either a local or remote source.\n\n| <span style="color:gray;font-size:14px">TYPE</span>                   | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------------------------- | :------------------------------------------------------ |\n| [ImageSourcePropType](https://reactnative.dev/docs/image#imagesource) | Yes                                                     |\n\n## AvatarIcon Props\n\n### `name`\n\nName of icon to use.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [IconName](../Icons/Icon.types.ts)                  | Yes                                                     |\n\n### `iconColor`\n\nOptional color of the icon.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| string                                              | No                                                      |\n\n### `backgroundColor`\n\nOptional background color of the icon.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| string                                              | No                                                      |\n\n## AvatarNetwork Props\n\n### `name`\n\nOptional network name.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [name](./variants/AvatarNetwork/AvatarNetwork.types.ts)                | No                                                      |\n\n### `imageSource`\n\nOptional network image from either a local or remote source.\n\n| <span style="color:gray;font-size:14px">TYPE</span>                   | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------------------------- | :------------------------------------------------------ |\n| [ImageSourcePropType](https://reactnative.dev/docs/image#imagesource) | No                                                      |\n\n## AvatarToken Props\n\n### `name`\n\nOptional token name.\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [tokenName](./variants/AvatarToken/AvatarToken.types.ts)             | No                                                      |\n\n### `imageSource`\n\nOptional token image from either a local or remote source.\n\n| <span style="color:gray;font-size:14px">TYPE</span>                   | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------------------------- | :------------------------------------------------------ |\n| [ImageSourcePropType](https://reactnative.dev/docs/image#imagesource) | No                                                      |\n\n### `isHaloEnabled`\n\nBoolean value that activates halo effect (blurred image colors around).\n\n| <span style="color:gray;font-size:14px">TYPE</span> | <span style="color:gray;font-size:14px">REQUIRED</span> |\n| :-------------------------------------------------- | :------------------------------------------------------ |\n| [isHaloEnabled](./variants/AvatarToken/AvatarToken.types.ts)         | No                                                      |\n\n## Usage\n\n```javascript\n// AvatarAccount\n<Avatar\n  variant={AvatarVariant.Account}\n  type={AvatarAccountType.Jazzicon}\n  accountAddress={ACCOUNT_ADDRESS}\n  size={AvatarSize.Md}\n/>;\n\n// AvatarFavicon\n<Avatar\n  variant={AvatarVariant.Favicon}\n  size={AvatarSize.Md} \n  imageSource={{ uri: IMAGE_URL }}\n/>;\n\n// AvatarIcon\n<Avatar\n  variant={AvatarVariant.Icon}\n  size={AvatarSize.Md}\n  name={IconName.Bank}\n  iconColor={ICON_COLOR}\n  backgroundColor={ICON_BACKGROUND_COLOR}\n/>;\n\n// AvatarNetwork\n<Avatar\n  variant={AvatarVariant.Network}\n  size={AvatarSize.Md}\n  name={NETWORK_NAME}\n  imageSource={{ uri: NETWORK_IMAGE_URL }}\n/>;\n\n// AvatarToken\n<Avatar\n  variant={AvatarVariant.Token}\n  size={AvatarSize.Md}\n  name={TOKEN_NAME}\n  imageSource={{ uri: TOKEN_IMAGE_URL }}\n  isHaloEnabled\n/>;\n```\n'}}]);